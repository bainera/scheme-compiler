/* cisc.c
 * Mock-assembly programming for a CISC-like architecture
 * 
 * 
 */

#include <stdio.h>
#include <stdlib.h>

#include "arch/cisc.h"

int main()
{
  START_MACHINE;

  JUMP(CONTINUE);

#include "arch/char.lib"
#include "arch/io.lib"
#include "arch/math.lib"
#include "arch/string.lib"
#include "arch/system.lib"
#include "arch/scheme.lib"
#include "rts.lib"

CONTINUE:
CALL(MAKE_SOB_VOID);
CALL(MAKE_SOB_NIL);
PUSH (IMM(0));
CALL(MAKE_SOB_BOOL);
DROP(1);
PUSH (IMM(1));
CALL(MAKE_SOB_BOOL);
DROP(1);
PUSH (IMM(3));
CALL (MALLOC);
MOV (R1,R0);
DROP(1);
PUSH (IMM(7));
CALL(MAKE_SOB_SYMBOL);
DROP(1);
PUSH (IMM(76));
PUSH (IMM(73));
PUSH (IMM(83));
PUSH (IMM(84));
PUSH (IMM(4));
CALL(MAKE_SOB_STRING);
DROP(5);
MOV (INDD(R1,0),R0);
MOV (INDD(R1,1) ,IMM(777));
MOV (INDD(R1,2), IMM(0));
PUSH (IMM(3));
CALL (MALLOC);
MOV (R1,R0);
DROP(1);
MOV (R0 , IMM(7));
MOV(INDD(R0,2), IMM(18));
PUSH (IMM(18));
CALL(MAKE_SOB_SYMBOL);
DROP(1);
PUSH (IMM(89));
PUSH (IMM(65));
PUSH (IMM(71));
PUSH (IMM(3));
CALL(MAKE_SOB_STRING);
DROP(4);
MOV (INDD(R1,0),R0);
MOV (INDD(R1,1) ,IMM(777));
MOV (INDD(R1,2), IMM(0));
PUSH (IMM(3));
CALL (MALLOC);
MOV (R1,R0);
DROP(1);
MOV (R0 , IMM(18));
MOV(INDD(R0,2), IMM(28));
PUSH (IMM(28));
CALL(MAKE_SOB_SYMBOL);
DROP(1);
PUSH (IMM(65));
PUSH (IMM(80));
PUSH (IMM(80));
PUSH (IMM(76));
PUSH (IMM(89));
PUSH (IMM(5));
CALL(MAKE_SOB_STRING);
DROP(6);
MOV (INDD(R1,0),R0);
MOV (INDD(R1,1) ,IMM(777));
MOV (INDD(R1,2), IMM(0));
PUSH (IMM(3));
CALL (MALLOC);
MOV (R1,R0);
DROP(1);
MOV (R0 , IMM(28));
MOV(INDD(R0,2), IMM(40));
PUSH (IMM(40));
CALL(MAKE_SOB_SYMBOL);
DROP(1);
PUSH (IMM(67));
PUSH (IMM(65));
PUSH (IMM(82));
PUSH (IMM(3));
CALL(MAKE_SOB_STRING);
DROP(4);
MOV (INDD(R1,0),R0);
MOV (INDD(R1,1) ,IMM(777));
MOV (INDD(R1,2), IMM(0));
PUSH (IMM(3));
CALL (MALLOC);
MOV (R1,R0);
DROP(1);
MOV (R0 , IMM(40));
MOV(INDD(R0,2), IMM(50));
PUSH (IMM(50));
CALL(MAKE_SOB_SYMBOL);
DROP(1);
PUSH (IMM(77));
PUSH (IMM(65));
PUSH (IMM(80));
PUSH (IMM(3));
CALL(MAKE_SOB_STRING);
DROP(4);
MOV (INDD(R1,0),R0);
MOV (INDD(R1,1) ,IMM(777));
MOV (INDD(R1,2), IMM(0));
MOV (R1,IMM(40));
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),0);
MOV(INDD(R0,2),LABEL(CAR_BODY));
MOV (INDD(R1,1),R0);
MOV (R1,IMM(28));
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),0);
MOV(INDD(R0,2),LABEL(APPLY_BODY));
MOV (INDD(R1,1),R0);
MOV (R1,IMM(50));
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),0);
MOV(INDD(R0,2),LABEL(MAP_BODY));
MOV (INDD(R1,1),R0);
PUSH (IMM(1));
CALL(MAKE_SOB_INTEGER);
DROP (1);
PUSH (IMM(2));
CALL(MAKE_SOB_INTEGER);
DROP (1);
PUSH (IMM(3));
CALL(MAKE_SOB_INTEGER);
DROP (1);
PUSH (IMM(69));
PUSH (IMM(71));
PUSH (IMM(73));
PUSH (IMM(3));
CALL(MAKE_SOB_VECTOR);
DROP (4);
MOV(R2,IMM(1));
PUSH(R2);
CALL (MALLOC);
DROP(1);
MOV(R1,R0);
CMP(R2,IMM(1));
JUMP_LE(VAR_ARG_COPY_LOOP_END_1001);
MOV(R2,FPARG(0));
MOV(R3,IMM(0));
MOV(R4,IMM(1));
VAR_ENV_COPY_LOOP_1001:
CMP(R3,IMM(1));
JUMP_GE(VAR_ENV_COPY_LOOP_END_1001);
MOV(INDD(R1,R4),INDD(R2,R3));
INCR(R4);
INCR(R3);
JUMP(VAR_ENV_COPY_LOOP_1001);
VAR_ENV_COPY_LOOP_END_1001:
PUSH(FPARG(1));
CALL(MALLOC);
DROP(1);
MOV(R2,R0);
MOV(R3,IMM(0));
MOV(R4,IMM(2));
VAR_ARG_COPY_LOOP_1001:
CMP(R3,FPARG(1));
JUMP_GE(VAR_ARG_COPY_LOOP_END_1001);
MOV(INDD(R2,R3),FPARG(R4));
INCR(R4);
INCR(R3);
JUMP(VAR_ARG_COPY_LOOP_1001);
VAR_ARG_COPY_LOOP_END_1001:
MOV(IND(R1),R2);
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),R1);
MOV(INDD(R0,2),LABEL(L_var_code_1001));
JUMP(L_var_exit_1001);
L_var_code_1001:
PUSH(FP);
MOV(FP,SP);
PUSH(R1);
PUSH(R2);
PUSH(R3);
MOV(R1,FPARG(1));
INCR(R1);
VAR_MAGIC_LOOP_1001:
CMP(R1,IMM(1));
JUMP_EQ(VAR_MAGIC_LOOP_END_1001);
INCR(R1);
PUSH(FPARG(R1));
DECR(R1);
PUSH(FPARG(R1));
CALL(MAKE_SOB_PAIR);
DROP(2);
MOV(FPARG(R1),R0);
DECR(R1);
JUMP(VAR_MAGIC_LOOP_1001);
VAR_MAGIC_LOOP_END_1001:
MOV(R3,FPARG(1));
MOV(FPARG(1),R1);
SUB(R3,FPARG(1));
MOV(R1,FP);
SUB(R1,5);
VAR_COPY_STACK_DOWN_1001:
CMP(R1,SP);
JUMP_EQ(VAR_COPY_STACK_DOWN_END_1001);
MOV(R2,R1);
SUB(R2,R3);
MOV(STACK(R2),STACK(R1));
INCR(R1);
JUMP(VAR_COPY_STACK_DOWN_1001);
VAR_COPY_STACK_DOWN_END_1001:
SUB(SP,R3);
SUB(FP,R3);
MOV(R0,FPARG(2));
POP(R3);
POP(R2);
POP(R1);
POP(FP);
RETURN;
L_var_exit_1001:
MOV (R1, IMM(7));
MOV (INDD(R1,1),R0);
MOV(R0, IMM(1));
CMP (R0,IMM(1));
JUMP_EQ (DONT_WRITE_VOID_1002);
PUSH(R0);
CALL(WRITE_SOB);
DROP(1);
CALL(NEWLINE);
DONT_WRITE_VOID_1002:
MOV(R2,IMM(1));
PUSH(R2);
CALL (MALLOC);
DROP(1);
MOV(R1,R0);
CMP(R2,IMM(1));
JUMP_LE(VAR_ARG_COPY_LOOP_END_1003);
MOV(R2,FPARG(0));
MOV(R3,IMM(0));
MOV(R4,IMM(1));
VAR_ENV_COPY_LOOP_1003:
CMP(R3,IMM(1));
JUMP_GE(VAR_ENV_COPY_LOOP_END_1003);
MOV(INDD(R1,R4),INDD(R2,R3));
INCR(R4);
INCR(R3);
JUMP(VAR_ENV_COPY_LOOP_1003);
VAR_ENV_COPY_LOOP_END_1003:
PUSH(FPARG(1));
CALL(MALLOC);
DROP(1);
MOV(R2,R0);
MOV(R3,IMM(0));
MOV(R4,IMM(2));
VAR_ARG_COPY_LOOP_1003:
CMP(R3,FPARG(1));
JUMP_GE(VAR_ARG_COPY_LOOP_END_1003);
MOV(INDD(R2,R3),FPARG(R4));
INCR(R4);
INCR(R3);
JUMP(VAR_ARG_COPY_LOOP_1003);
VAR_ARG_COPY_LOOP_END_1003:
MOV(IND(R1),R2);
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),R1);
MOV(INDD(R0,2),LABEL(L_var_code_1003));
JUMP(L_var_exit_1003);
L_var_code_1003:
PUSH(FP);
MOV(FP,SP);
PUSH(R1);
PUSH(R2);
PUSH(R3);
MOV(R1,FPARG(1));
INCR(R1);
VAR_MAGIC_LOOP_1003:
CMP(R1,IMM(1));
JUMP_EQ(VAR_MAGIC_LOOP_END_1003);
INCR(R1);
PUSH(FPARG(R1));
DECR(R1);
PUSH(FPARG(R1));
CALL(MAKE_SOB_PAIR);
DROP(2);
MOV(FPARG(R1),R0);
DECR(R1);
JUMP(VAR_MAGIC_LOOP_1003);
VAR_MAGIC_LOOP_END_1003:
MOV(R3,FPARG(1));
MOV(FPARG(1),R1);
SUB(R3,FPARG(1));
MOV(R1,FP);
SUB(R1,5);
VAR_COPY_STACK_DOWN_1003:
CMP(R1,SP);
JUMP_EQ(VAR_COPY_STACK_DOWN_END_1003);
MOV(R2,R1);
SUB(R2,R3);
MOV(STACK(R2),STACK(R1));
INCR(R1);
JUMP(VAR_COPY_STACK_DOWN_1003);
VAR_COPY_STACK_DOWN_END_1003:
SUB(SP,R3);
SUB(FP,R3);
PUSH(IMM(2));
PUSH(IMM(2));
MOV(R0,FPARG(2));
PUSH(R0);
MOV(R2,IMM(2));
PUSH(R2);
CALL (MALLOC);
DROP(1);
MOV(R1,R0);
CMP(R2,IMM(1));
JUMP_LE(SIMPLE_ARG_COPY_LOOP_END_1004);
MOV(R2,FPARG(0));
MOV(R3,IMM(0));
MOV(R4,IMM(1));
SIMPLE_ENV_COPY_LOOP_1004:
CMP(R3,IMM(2));
JUMP_GE(SIMPLE_ENV_COPY_LOOP_END_1004);
MOV(INDD(R1,R4),INDD(R2,R3));
INCR(R4);
INCR(R3);
JUMP(SIMPLE_ENV_COPY_LOOP_1004);
SIMPLE_ENV_COPY_LOOP_END_1004:
PUSH(FPARG(1));
CALL(MALLOC);
DROP(1);
MOV(R2,R0);
MOV(R3,IMM(0));
MOV(R4,IMM(2));
SIMPLE_ARG_COPY_LOOP_1004:
CMP(R3,FPARG(1));
JUMP_GE(SIMPLE_ARG_COPY_LOOP_END_1004);
MOV(INDD(R2,R3),FPARG(R4));
INCR(R4);
INCR(R3);
JUMP(SIMPLE_ARG_COPY_LOOP_1004);
SIMPLE_ARG_COPY_LOOP_END_1004:
MOV(IND(R1),R2);
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),R1);
MOV(INDD(R0,2),LABEL(L_simple_code_1004));
JUMP(L_simple_exit_1004);
L_simple_code_1004:
PUSH(FP);
MOV(FP,SP);
MOV(R2,IMM(3));
PUSH(R2);
CALL (MALLOC);
DROP(1);
MOV(R1,R0);
CMP(R2,IMM(1));
JUMP_LE(VAR_ARG_COPY_LOOP_END_1005);
MOV(R2,FPARG(0));
MOV(R3,IMM(0));
MOV(R4,IMM(1));
VAR_ENV_COPY_LOOP_1005:
CMP(R3,IMM(3));
JUMP_GE(VAR_ENV_COPY_LOOP_END_1005);
MOV(INDD(R1,R4),INDD(R2,R3));
INCR(R4);
INCR(R3);
JUMP(VAR_ENV_COPY_LOOP_1005);
VAR_ENV_COPY_LOOP_END_1005:
PUSH(FPARG(1));
CALL(MALLOC);
DROP(1);
MOV(R2,R0);
MOV(R3,IMM(0));
MOV(R4,IMM(2));
VAR_ARG_COPY_LOOP_1005:
CMP(R3,FPARG(1));
JUMP_GE(VAR_ARG_COPY_LOOP_END_1005);
MOV(INDD(R2,R3),FPARG(R4));
INCR(R4);
INCR(R3);
JUMP(VAR_ARG_COPY_LOOP_1005);
VAR_ARG_COPY_LOOP_END_1005:
MOV(IND(R1),R2);
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),R1);
MOV(INDD(R0,2),LABEL(L_var_code_1005));
JUMP(L_var_exit_1005);
L_var_code_1005:
PUSH(FP);
MOV(FP,SP);
PUSH(R1);
PUSH(R2);
PUSH(R3);
MOV(R1,FPARG(1));
INCR(R1);
VAR_MAGIC_LOOP_1005:
CMP(R1,IMM(1));
JUMP_EQ(VAR_MAGIC_LOOP_END_1005);
INCR(R1);
PUSH(FPARG(R1));
DECR(R1);
PUSH(FPARG(R1));
CALL(MAKE_SOB_PAIR);
DROP(2);
MOV(FPARG(R1),R0);
DECR(R1);
JUMP(VAR_MAGIC_LOOP_1005);
VAR_MAGIC_LOOP_END_1005:
MOV(R3,FPARG(1));
MOV(FPARG(1),R1);
SUB(R3,FPARG(1));
MOV(R1,FP);
SUB(R1,5);
VAR_COPY_STACK_DOWN_1005:
CMP(R1,SP);
JUMP_EQ(VAR_COPY_STACK_DOWN_END_1005);
MOV(R2,R1);
SUB(R2,R3);
MOV(STACK(R2),STACK(R1));
INCR(R1);
JUMP(VAR_COPY_STACK_DOWN_1005);
VAR_COPY_STACK_DOWN_END_1005:
SUB(SP,R3);
SUB(FP,R3);
PUSH(IMM(2));
PUSH(IMM(2));
MOV(R0,FPARG(2));
PUSH(R0);
MOV(R2,IMM(4));
PUSH(R2);
CALL (MALLOC);
DROP(1);
MOV(R1,R0);
CMP(R2,IMM(1));
JUMP_LE(SIMPLE_ARG_COPY_LOOP_END_1006);
MOV(R2,FPARG(0));
MOV(R3,IMM(0));
MOV(R4,IMM(1));
SIMPLE_ENV_COPY_LOOP_1006:
CMP(R3,IMM(4));
JUMP_GE(SIMPLE_ENV_COPY_LOOP_END_1006);
MOV(INDD(R1,R4),INDD(R2,R3));
INCR(R4);
INCR(R3);
JUMP(SIMPLE_ENV_COPY_LOOP_1006);
SIMPLE_ENV_COPY_LOOP_END_1006:
PUSH(FPARG(1));
CALL(MALLOC);
DROP(1);
MOV(R2,R0);
MOV(R3,IMM(0));
MOV(R4,IMM(2));
SIMPLE_ARG_COPY_LOOP_1006:
CMP(R3,FPARG(1));
JUMP_GE(SIMPLE_ARG_COPY_LOOP_END_1006);
MOV(INDD(R2,R3),FPARG(R4));
INCR(R4);
INCR(R3);
JUMP(SIMPLE_ARG_COPY_LOOP_1006);
SIMPLE_ARG_COPY_LOOP_END_1006:
MOV(IND(R1),R2);
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),R1);
MOV(INDD(R0,2),LABEL(L_simple_code_1006));
JUMP(L_simple_exit_1006);
L_simple_code_1006:
PUSH(FP);
MOV(FP,SP);
MOV(R2,IMM(5));
PUSH(R2);
CALL (MALLOC);
DROP(1);
MOV(R1,R0);
CMP(R2,IMM(1));
JUMP_LE(VAR_ARG_COPY_LOOP_END_1007);
MOV(R2,FPARG(0));
MOV(R3,IMM(0));
MOV(R4,IMM(1));
VAR_ENV_COPY_LOOP_1007:
CMP(R3,IMM(5));
JUMP_GE(VAR_ENV_COPY_LOOP_END_1007);
MOV(INDD(R1,R4),INDD(R2,R3));
INCR(R4);
INCR(R3);
JUMP(VAR_ENV_COPY_LOOP_1007);
VAR_ENV_COPY_LOOP_END_1007:
PUSH(FPARG(1));
CALL(MALLOC);
DROP(1);
MOV(R2,R0);
MOV(R3,IMM(0));
MOV(R4,IMM(2));
VAR_ARG_COPY_LOOP_1007:
CMP(R3,FPARG(1));
JUMP_GE(VAR_ARG_COPY_LOOP_END_1007);
MOV(INDD(R2,R3),FPARG(R4));
INCR(R4);
INCR(R3);
JUMP(VAR_ARG_COPY_LOOP_1007);
VAR_ARG_COPY_LOOP_END_1007:
MOV(IND(R1),R2);
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),R1);
MOV(INDD(R0,2),LABEL(L_var_code_1007));
JUMP(L_var_exit_1007);
L_var_code_1007:
PUSH(FP);
MOV(FP,SP);
PUSH(R1);
PUSH(R2);
PUSH(R3);
MOV(R1,FPARG(1));
INCR(R1);
VAR_MAGIC_LOOP_1007:
CMP(R1,IMM(1));
JUMP_EQ(VAR_MAGIC_LOOP_END_1007);
INCR(R1);
PUSH(FPARG(R1));
DECR(R1);
PUSH(FPARG(R1));
CALL(MAKE_SOB_PAIR);
DROP(2);
MOV(FPARG(R1),R0);
DECR(R1);
JUMP(VAR_MAGIC_LOOP_1007);
VAR_MAGIC_LOOP_END_1007:
MOV(R3,FPARG(1));
MOV(FPARG(1),R1);
SUB(R3,FPARG(1));
MOV(R1,FP);
SUB(R1,5);
VAR_COPY_STACK_DOWN_1007:
CMP(R1,SP);
JUMP_EQ(VAR_COPY_STACK_DOWN_END_1007);
MOV(R2,R1);
SUB(R2,R3);
MOV(STACK(R2),STACK(R1));
INCR(R1);
JUMP(VAR_COPY_STACK_DOWN_1007);
VAR_COPY_STACK_DOWN_END_1007:
SUB(SP,R3);
SUB(FP,R3);
PUSH(IMM(2));
MOV(R0,FPARG(2));
PUSH(R0);
PUSH(IMM(2));
MOV(R0,FPARG(0));
MOV(R0,INDD(R0,1));
 MOV(R0,INDD(R0,0));
PUSH(R0);
MOV(R0,FPARG(0));
MOV(R0,INDD(R0,0));
 MOV(R0,INDD(R0,0));
PUSH(R0);
PUSH(IMM(2));
MOV (R1 , IMM(28));
MOV (R0, INDD(R1,1));
CMP (R0,0);
JUMP_EQ(Error_UNDEFINED_VAR);
CMP(IND(R0),T_CLOSURE);
JUMP_NE(NOT_CLOSUR_ERROR);
PUSH(INDD(R0,1));
CALLA(INDD(R0,2));
DROP(IMM(1));
POP(R1);
DROP(R1);
DROP(1);
PUSH(R0);
PUSH(IMM(2));
MOV (R1 , IMM(28));
MOV (R0, INDD(R1,1));
CMP (R0,0);
JUMP_EQ(Error_UNDEFINED_VAR);
CMP(IND(R0),T_CLOSURE);
JUMP_NE(NOT_CLOSUR_ERROR);
PUSH(INDD(R0,1));
CALLA(INDD(R0,2));
DROP(IMM(1));
POP(R1);
DROP(R1);
DROP(1);
POP(R3);
POP(R2);
POP(R1);
POP(FP);
RETURN;
L_var_exit_1007:
POP(FP);
RETURN;
L_simple_exit_1006:
PUSH(R0);
PUSH(IMM(2));
MOV (R1 , IMM(50));
MOV (R0, INDD(R1,1));
CMP (R0,0);
JUMP_EQ(Error_UNDEFINED_VAR);
CMP(IND(R0),T_CLOSURE);
JUMP_NE(NOT_CLOSUR_ERROR);
PUSH(INDD(R0,1));
CALLA(INDD(R0,2));
DROP(IMM(1));
POP(R1);
DROP(R1);
DROP(1);
PUSH(R0);
MOV(R0,FPARG(0));
MOV(R0,INDD(R0,0));
 MOV(R0,INDD(R0,0));
PUSH(R0);
PUSH(IMM(2));
MOV (R1 , IMM(28));
MOV (R0, INDD(R1,1));
CMP (R0,0);
JUMP_EQ(Error_UNDEFINED_VAR);
CMP(IND(R0),T_CLOSURE);
JUMP_NE(NOT_CLOSUR_ERROR);
PUSH(INDD(R0,1));
CALLA(INDD(R0,2));
DROP(IMM(1));
POP(R1);
DROP(R1);
DROP(1);
POP(R3);
POP(R2);
POP(R1);
POP(FP);
RETURN;
L_var_exit_1005:
POP(FP);
RETURN;
L_simple_exit_1004:
PUSH(R0);
PUSH(IMM(2));
MOV (R1 , IMM(50));
MOV (R0, INDD(R1,1));
CMP (R0,0);
JUMP_EQ(Error_UNDEFINED_VAR);
CMP(IND(R0),T_CLOSURE);
JUMP_NE(NOT_CLOSUR_ERROR);
PUSH(INDD(R0,1));
CALLA(INDD(R0,2));
DROP(IMM(1));
POP(R1);
DROP(R1);
DROP(1);
PUSH(R0);
PUSH(IMM(1));
MOV(R2,IMM(2));
PUSH(R2);
CALL (MALLOC);
DROP(1);
MOV(R1,R0);
CMP(R2,IMM(1));
JUMP_LE(SIMPLE_ARG_COPY_LOOP_END_1008);
MOV(R2,FPARG(0));
MOV(R3,IMM(0));
MOV(R4,IMM(1));
SIMPLE_ENV_COPY_LOOP_1008:
CMP(R3,IMM(2));
JUMP_GE(SIMPLE_ENV_COPY_LOOP_END_1008);
MOV(INDD(R1,R4),INDD(R2,R3));
INCR(R4);
INCR(R3);
JUMP(SIMPLE_ENV_COPY_LOOP_1008);
SIMPLE_ENV_COPY_LOOP_END_1008:
PUSH(FPARG(1));
CALL(MALLOC);
DROP(1);
MOV(R2,R0);
MOV(R3,IMM(0));
MOV(R4,IMM(2));
SIMPLE_ARG_COPY_LOOP_1008:
CMP(R3,FPARG(1));
JUMP_GE(SIMPLE_ARG_COPY_LOOP_END_1008);
MOV(INDD(R2,R3),FPARG(R4));
INCR(R4);
INCR(R3);
JUMP(SIMPLE_ARG_COPY_LOOP_1008);
SIMPLE_ARG_COPY_LOOP_END_1008:
MOV(IND(R1),R2);
PUSH(IMM(3));
CALL(MALLOC);
DROP(1);
MOV(IND(R0),T_CLOSURE);
MOV(INDD(R0,1),R1);
MOV(INDD(R0,2),LABEL(L_simple_code_1008));
JUMP(L_simple_exit_1008);
L_simple_code_1008:
PUSH(FP);
MOV(FP,SP);
PUSH(IMM(2));
MOV(R0,FPARG(2));
PUSH(R0);
PUSH(IMM(2));
MOV(R0,FPARG(2));
PUSH(R0);
PUSH(IMM(1));
MOV (R1 , IMM(40));
MOV (R0, INDD(R1,1));
CMP (R0,0);
JUMP_EQ(Error_UNDEFINED_VAR);
CMP(IND(R0),T_CLOSURE);
JUMP_NE(NOT_CLOSUR_ERROR);
PUSH(INDD(R0,1));
CALLA(INDD(R0,2));
DROP(IMM(1));
POP(R1);
DROP(R1);
DROP(1);
PUSH(R0);
PUSH(IMM(2));
MOV (R1 , IMM(28));
MOV (R0, INDD(R1,1));
CMP (R0,0);
JUMP_EQ(Error_UNDEFINED_VAR);
CMP(IND(R0),T_CLOSURE);
JUMP_NE(NOT_CLOSUR_ERROR);
PUSH(INDD(R0,1));
CALLA(INDD(R0,2));
DROP(IMM(1));
POP(R1);
DROP(R1);
DROP(1);
POP(FP);
RETURN;
L_simple_exit_1008:
CMP(IND(R0),T_CLOSURE);
JUMP_NE(NOT_CLOSUR_ERROR);
PUSH(INDD(R0,1));
CALLA(INDD(R0,2));
DROP(IMM(1));
POP(R1);
DROP(R1);
DROP(1);
POP(R3);
POP(R2);
POP(R1);
POP(FP);
RETURN;
L_var_exit_1003:
MOV (R1, IMM(18));
MOV (INDD(R1,1),R0);
MOV(R0, IMM(1));
CMP (R0,IMM(1));
JUMP_EQ (DONT_WRITE_VOID_1009);
PUSH(R0);
CALL(WRITE_SOB);
DROP(1);
CALL(NEWLINE);
DONT_WRITE_VOID_1009:
MOV (R0 , IMM(75));
CMP (R0,IMM(1));
JUMP_EQ (DONT_WRITE_VOID_1010);
PUSH(R0);
CALL(WRITE_SOB);
DROP(1);
CALL(NEWLINE);
DONT_WRITE_VOID_1010:
STOP_MACHINE;
return 0;}
